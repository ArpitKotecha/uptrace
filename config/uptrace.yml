##
## You can use environment variables anywhere in this file, for example:
##
##   foo: $FOO
##   bar: ${BAR}
##   $BAZ: baz
##
## To escape `$`, use `$$`, for example:
##
##   foo: $$FooBar
##

# Enable to log HTTP requests and ClickHouse queries.
debug: false

# Secret key that is used to sign JWT tokens etc.
secret_key: changeme

listen:
  # OTLP/gRPC API
  grpc: ':14317'
  # OTLP/HTTP API and Uptrace HTTP API
  http: ':14318'

# Public URL for Vue-powered UI.
site:
  addr: 'http://localhost:14318'

ch:
  # Connection string for ClickHouse database. For example:
  # clickhouse://<user>:<password>@<host>:<port>/<database>?sslmode=disable
  #
  # See https://clickhouse.uptrace.dev/
  dsn: 'clickhouse://default:@localhost:9000/uptrace?sslmode=disable'

# Various options to tweak ClickHouse schema.
ch_schema:
  # Compression codec, for example, LZ4 or ZSTD(3).
  compression: Default

  # Delete data after 30 days.
  # Supports SQL interval syntax, for example, INTERVAL 30 DAY.
  ttl: 30 DAY

  # Whether to create ReplicatedMergeTree instead of MergeTree.
  #replicated: false

  # Cluster name for Distributed tables and ON CLUSTER clause.
  #cluster: uptrace1

# Spans processing options.
spans:
  # The size of Go chan used to buffer incoming spans.
  #buffer_size: 100000

  # The number of spans to insert in a single query.
  #batch_size: 10000

# Metrics processing options.
metrics:
  # The size of Go chan used to buffer incoming measures.
  #buffer_size: 100000

  # The number of measures to insert in a single query.
  #batch_size: 10000

# To require authentication, uncomment the following section.
# users:
#   - id: 1
#     username: uptrace
#     password: uptrace

projects:
  # Conventionally, first project is used for self-monitoring.
  - id: 1
    name: Uptrace
    token: project1_secret_token

  - id: 2
    name: My project
    token: project2_secret_token

# Uptrace uses Prometheus to send alerts and monitor metrics.
prometheus:
  # Path to the Prometheus config.
  config: uptrace-prometheus.yml
